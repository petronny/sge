SGE_CONF(5)                Grid Engine File Formats                SGE_CONF(5)



NNAAMMEE
       sge_conf - Grid Engine configuration files

DDEESSCCRRIIPPTTIIOONN
       _s_g_e___c_o_n_f  defines  the  global and local Grid Engine configurations and
       can be shown/modified by _q_c_o_n_f(1) using the -sconf/-mconf options. Only
       root or the cluster administrator may modify _s_g_e___c_o_n_f_.

       At  its  initial start-up, _s_g_e___q_m_a_s_t_e_r(8) checks to see if a valid Grid
       Engine configuration is available at a well known location in the  Grid
       Engine  internal  directory hierarchy.  If so, it loads that configura-
       tion information and proceeds.  If not, _s_g_e___q_m_a_s_t_e_r(8) writes a generic
       configuration  containing  default  values  to that same location.  The
       Grid Engine execution daemons _s_g_e___e_x_e_c_d(8) upon start-up retrieve their
       configuration from _s_g_e___q_m_a_s_t_e_r(8).

       The  actual configuration for both _s_g_e___q_m_a_s_t_e_r(8) and _s_g_e___e_x_e_c_d(8) is a
       superposition of a _g_l_o_b_a_l configuration and a _l_o_c_a_l configuration  per-
       tinent  for the host on which a master or execution daemon resides.  If
       a local configuration is available, its entries  overwrite  the  corre-
       sponding  entries of the global configuration. NNoottee:: The local configu-
       ration does not have to contain all valid  configuration  entries,  but
       only those which need to be modified against the global entries.

       Note:  Grid  Engine  allows  backslashes  (\) be used to escape newline
       characters. The backslash and the newline are replaced with a space  ("
       ") character before any interpretation.

FFOORRMMAATT
       The paragraphs that follow provide brief descriptions of the individual
       parameters that compose the global and local configurations for a  Grid
       Engine cluster:

   eexxeeccdd__ssppooooll__ddiirr
       The  execution  daemon  spool  directory  path. Again, a feasible spool
       directory requires read/write access permission for root. The entry  in
       the  global configuration for this parameter can be overwritten by exe-
       cution host local configurations, i.e. each  _s_g_e___e_x_e_c_d(8)  may  have  a
       private  spool  directory with a different path, in which case it needs
       to provide read/write permission for the root  account  of  the  corre-
       sponding execution host only.

       Under  eexxeeccdd__ssppooooll__ddiirr  a directory named corresponding to the unquali-
       fied hostname of the execution host is opened and contains all informa-
       tion  spooled to disk. Thus, it is possible for the eexxeeccdd__ssppooooll__ddiirrs of
       all execution hosts to physically reference  the  same  directory  path
       (the root access restrictions mentioned above need to be met, however).

       Changing  the global eexxeeccdd__ssppooooll__ddiirr parameter set at installation time
       is not supported in a running system. If the  change  should  still  be
       done  it is required to restart all affected execution daemons.  Please
       make sure running jobs have finished before doing so, otherwise running
       jobs will be lost.


       The  default  location  for  the  execution  daemon  spool directory is
       $SGE_ROOT/$SGE_CELL/spool.

       The global configuration entry for this value may be overwritten by the
       execution host local configuration.

   mmaaiilleerr
       mmaaiilleerr  is  the absolute pathname to the electronic mail delivery agent
       on your system. It must accept the following syntax:

              mailer -s <subject-of-mail-message> <recipient>

       Each _s_g_e___e_x_e_c_d(8) may use a private mail agent.  Changing  mmaaiilleerr  will
       take immediate effect.

       The  default  for mmaaiilleerr depends on the operating system of the host on
       which the Grid Engine master installation was run.  Common  values  are
       /bin/mail  or  /usr/bin/Mail.  Note that since the mail is sent by com-
       pute hosts, not the master, it may be necessary to take steps to  route
       it  appropriately,  e.g. by using a cluster head node as a "smart host"
       for the private network.

       The global configuration entry for this value may be overwritten by the
       execution host local configuration.

   xxtteerrmm
       xxtteerrmm  is  the absolute pathname to the X Window System terminal emula-
       tor, _x_t_e_r_m(1).

       Changing xxtteerrmm will take immediate effect.

       The default for xxtteerrmm is system-dependent.

       The global configuration entry for this value may be overwritten by the
       execution host local configuration.

   llooaadd__sseennssoorr
       A  comma-separated list of executable shell script paths or programs to
       be started by _s_g_e___e_x_e_c_d(8) and to be used in order  to  retrieve  site-
       configurable load information (e.g. free space on a certain disk parti-
       tion).

       Each _s_g_e___e_x_e_c_d(8) may use a set  of  private  llooaadd__sseennssoorr  programs  or
       scripts.  Changing  llooaadd__sseennssoorr  will take effect after two load report
       intervals (see llooaadd__rreeppoorrtt__ttiimmee). A load sensor will be restarted auto-
       matically  if  the file modification time of the load sensor executable
       changes.

       The global configuration entry for this value may be overwritten by the
       execution host local configuration.

       In addition to the load sensors configured via llooaadd__sseennssoorr, _s_g_e___e_x_e_c(8)
       searches for an executable file  named  _q_l_o_a_d_s_e_n_s_o_r  in  the  execution
       host's  Grid Engine binary directory path.  If such a file is found, it
       is treated like the configurable load sensors defined  in  llooaadd__sseennssoorr.
       This facility is intended for pre-installing a default load sensor.

   pprroolloogg
       The  executable path of a shell script that is started before execution
       of Grid Engine jobs with the same environment setting as that  for  the
       Grid  Engine  jobs to be started afterwards (see _q_s_u_b(1)).  An optional
       prefix "user@" specifies the user under which this procedure is  to  be
       started.  The  procedure's  standard output and the error output stream
       are written to the same file as used for the standard output and  error
       output of each job.

       This procedure is intended as a means for the Grid Engine administrator
       to automate the execution of  general  site-specific  tasks,  like  the
       preparation of temporary file systems, with a need for the same context
       information as the job.  For a parallel job, only a single instance  of
       the  prolog  is  run,  on the master node.  Each _s_g_e___e_x_e_c_d(8) may use a
       private prolog script.  Correspondingly, the execution host local  con-
       figurations   can  be  overwritten  by  the  queue  configuration  (see
       _q_u_e_u_e___c_o_n_f(5)).  Changing pprroolloogg will take immediate effect.

       The default for pprroolloogg is the special value NONE, which prevents execu-
       tion of a prolog script.

       The  following  special  variables,  expanded  at  runtime, can be used
       (besides any other strings which have to be interpreted by  the  proce-
       dure) to constitute a command line:

       _$_h_o_s_t  The  name  of  the host on which the prolog or epilog procedures
              are started.

       _$_j_o_b___o_w_n_e_r
              The user name of the job owner.

       _$_j_o_b___i_d
              Grid Engine's unique job identification number.

       _$_j_o_b___n_a_m_e
              The name of the job.

       _$_p_r_o_c_e_s_s_o_r_s
              The pprroocceessssoorrss string as contained in  the  queue  configuration
              (see  _q_u_e_u_e___c_o_n_f(5)) of the master queue (the queue in which the
              prolog and epilog procedures are started).

       _$_q_u_e_u_e The cluster queue name of the master queue  instance,  i.e.  the
              cluster  queue  in  which  the  prolog and epilog procedures are
              started.

       _$_s_t_d_i_n___p_a_t_h
              The pathname of the stdin file. This  is  always  /dev/null  for
              prolog,  pe_start, pe_stop and epilog. It is the pathname of the
              stdin file for the job in the job script.  When  delegated  file
              staging is enabled, this path is set to $fs_stdin_tmp_path. When
              delegated file staging is not enabled, it is the stdin  pathname
              given via DRMAA or qsub.

       _$_s_t_d_o_u_t___p_a_t_h

       _$_s_t_d_e_r_r___p_a_t_h
              The  pathname  of  the stdout/stderr file. This always points to
              the output/error file. When delegated file staging  is  enabled,
              this  path  is  set  to $fs_stdout_tmp_path/$fs_stderr_tmp_path.
              When delegated file staging is  not  enabled,  it  is  the  std-
              out/stderr pathname given via DRMAA or qsub.

       _$_m_e_r_g_e___s_t_d_e_r_r
              If this flag is 1, stdout and stderr are merged in one file, the
              stdout file.  Otherwise  (the  default),  no  merging  is  done.
              Merging  of stderr and stdout can be requested via the DRMAA job
              template attribute 'drmaa_join_files' (see  _d_r_m_a_a___a_t_t_r_i_b_u_t_e_s(3))
              or the qsub parameter '-j y' (see _q_s_u_b(1)).

       _$_f_s___s_t_d_i_n___h_o_s_t
              When  delegated  file  staging  is requested for the stdin file,
              this is the name of the host where the  stdin  file  has  to  be
              copied from before the job is started.

       _$_f_s___s_t_d_o_u_t___h_o_s_t

       _$_f_s___s_t_d_e_r_r___h_o_s_t
              When  delegated  file staging is requested for the stdout/stderr
              file, this is the name of the host where the stdout/stderr  file
              has to be copied to after the job has run.

       _$_f_s___s_t_d_i_n___p_a_t_h
              When  delegated  file  staging  is requested for the stdin file,
              this  is  the  pathname  of  the  stdin   file   on   the   host
              $fs_stdin_host.

       _$_f_s___s_t_d_o_u_t___p_a_t_h

       _$_f_s___s_t_d_e_r_r___p_a_t_h
              When  delegated  file staging is requested for the stdout/stderr
              file, this is the pathname of the stdout/stderr file on the host
              $fs_stdout_host/$fs_stderr_host.

       _$_f_s___s_t_d_i_n___t_m_p___p_a_t_h
              When  delegated  file  staging  is requested for the stdin file,
              this is the destination pathname of the stdin file on the execu-
              tion  host.  The  prolog  script  must  copy the stdin file from
              $fs_stdin_host:$fs_stdin_path to localhost:$fs_stdin_tmp_path to
              establish delegated file staging of the stdin file.

       _$_f_s___s_t_d_o_u_t___t_m_p___p_a_t_h

       _$_f_s___s_t_d_e_r_r___t_m_p___p_a_t_h
              When  delegated  file staging is requested for the stdout/stderr
              file, this is the source pathname of the stdout/stderr  file  on
              the  execution host. The epilog script must copy the stdout file
              from localhost:$fs_stdout_tmp_path  to  $fs_stdout_host:$fs_std-
              out_path  (the stderr file from localhost:$fs_stderr_tmp_path to
              $fs_stderr_host:$fs_stderr_path)  to  establish  delegated  file
              staging of the stdout/stderr file.

       _$_f_s___s_t_d_i_n___f_i_l_e___s_t_a_g_i_n_g

       _$_f_s___s_t_d_o_u_t___f_i_l_e___s_t_a_g_i_n_g

       _$_f_s___s_t_d_e_r_r___f_i_l_e___s_t_a_g_i_n_g
              When  delegated  file  staging  is  requested for the stdin/std-
              out/stderr file, the flag is set to "1", otherwise it is set  to
              "0"  (see in ddeelleeggaatteedd__ffiillee__ssttaaggiinngg how to enable delegated file
              staging).

              These three flags correspond to the DRMAA job template attribute
              'drmaa_transfer_files' (see _d_r_m_a_a___a_t_t_r_i_b_u_t_e_s(3)).

       The global configuration entry for this value may be overwritten by the
       execution host local configuration.

       Exit codes for the prolog attribute can be  interpreted  based  on  the
       following exit values:
              0: Success
              99: Reschedule job
              100: Put job in error state
              Anything else: Put queue in error state

   eeppiilloogg
       The  executable  path of a shell script that is started after execution
       of Grid Engine jobs with the same environment setting as that  for  the
       Grid  Engine  job  that  has just completed (see _q_s_u_b(1)).  An optional
       prefix "user@" specifies the user under which this procedure is  to  be
       started.  The  procedure's  standard output and the error output stream
       are written to the same file used also  for  the  standard  output  and
       error output of each job.

       This procedure is intended as a means for the Grid Engine administrator
       to automate the execution of  general  site-specific  tasks,  like  the
       cleaning  up  of temporary file systems with the need for the same con-
       text information as the  job.   For  a  parallel  job,  only  a  single
       instance  of  the  epilog is run on the master node.  Each _s_g_e___e_x_e_c_d(8)
       may use a private epilog script.  Correspondingly, the  execution  host
       local  configurations  is can be overwritten by the queue configuration
       (see _q_u_e_u_e___c_o_n_f(5)).  Changing eeppiilloogg will take immediate effect.

       The default for eeppiilloogg is the special value NONE, which  prevents  from
       execution of a epilog script.  The same special variables as for pprroolloogg
       can be used to constitute a command line.

       The global configuration entry for this value may be overwritten by the
       execution host local configuration.

       Exit  codes  for  the  epilog attribute can be interpreted based on the
       following exit values:
              0: Success
              99: Reschedule job
              100: Put job in error state
              Anything else: Put queue in error state

   sshheellll__ssttaarrtt__mmooddee
       NNoottee:: Deprecated, may be removed in future release.
       This parameter defines the mechanisms which are used to actually invoke
       the job scripts on the execution hosts. The following values are recog-
       nized:

       _u_n_i_x___b_e_h_a_v_i_o_r
              If a user starts a job shell script under UNIX interactively  by
              invoking  it  just  with  the script name the operating system's
              executable loader uses the information  provided  in  a  comment
              such  as  `#!/bin/csh' in the first line of the script to detect
              which command interpreter to start to interpret the script. This
              mechanism   is  used  by  Grid  Engine  when  starting  jobs  if
              _u_n_i_x___b_e_h_a_v_i_o_r is defined as sshheellll__ssttaarrtt__mmooddee.

       _p_o_s_i_x___c_o_m_p_l_i_a_n_t
              POSIX does not  consider  first  script  line  comments  such  a
              `#!/bin/csh' as significant. The POSIX standard for batch queue-
              ing systems (P1003.2d) therefore requires a  compliant  queueing
              system  to  ignore such lines, but to use user-specified or con-
              figured  default  command   interpreters   instead.   Thus,   if
              sshheellll__ssttaarrtt__mmooddee  is  set  to  _p_o_s_i_x___c_o_m_p_l_i_a_n_t  Grid Engine will
              either use the command interpreter indicated by the --SS option of
              the  _q_s_u_b(1)  command  or the sshheellll parameter of the queue to be
              used (see _q_u_e_u_e___c_o_n_f(5) for details).

       _s_c_r_i_p_t___f_r_o_m___s_t_d_i_n
              Setting the sshheellll__ssttaarrtt__mmooddee parameter either to _p_o_s_i_x___c_o_m_p_l_i_a_n_t
              or  _u_n_i_x___b_e_h_a_v_i_o_r  requires  you  to  set  the  umask in use for
              _s_g_e___e_x_e_c_d(8) such  that  every  user  has  read  access  to  the
              active_jobs  directory in the spool directory of the correspond-
              ing execution daemon. In case you have pprroolloogg and eeppiilloogg scripts
              configured,  they  also  need to be readable by any user who may
              execute jobs.
              If this violates your site's security policies you may  want  to
              set  sshheellll__ssttaarrtt__mmooddee to _s_c_r_i_p_t___f_r_o_m___s_t_d_i_n. This will force Grid
              Engine to open the job script as well as the epilog  and  prolog
              scripts  for  reading  into  STDIN  as root (if _s_g_e___e_x_e_c_d(8) was
              started as  root)  before  changing  to  the  job  owner's  user
              account.   The  script  is then fed into the STDIN stream of the
              command interpreter indicated by the --SS option  of  the  _q_s_u_b(1)
              command  or  the  sshheellll  parameter  of the queue to be used (see
              _q_u_e_u_e___c_o_n_f(5) for details).
              Thus setting sshheellll__ssttaarrtt__mmooddee to _s_c_r_i_p_t___f_r_o_m___s_t_d_i_n also  implies
              _p_o_s_i_x___c_o_m_p_l_i_a_n_t  behavior.  NNoottee,  however, that feeding scripts
              into the STDIN stream of a command interpreter may cause trouble
              if  commands like _r_s_h(1) are invoked inside a job script as they
              also process the STDIN stream of the command interpreter.  These
              problems  can usually be resolved by redirecting the STDIN chan-
              nel of those commands to come from /dev/null (e.g. rsh host date
              <  /dev/null).  NNoottee aallssoo, that any command-line options associ-
              ated with the job are passed to the executing shell.  The  shell
              will  only forward them to the job if they are not recognized as
              valid shell options.

       Changes to sshheellll__ssttaarrtt__mmooddee will take immediate  effect.   The  default
       for sshheellll__ssttaarrtt__mmooddee is _p_o_s_i_x___c_o_m_p_l_i_a_n_t.

       This value is a global configuration parameter only. It cannot be over-
       written by the execution host local configuration.

   llooggiinn__sshheellllss
       UNIX command interpreters like the Bourne-Shell (see _s_h(1)) or  the  C-
       Shell (see _c_s_h(1)) can be used by Grid Engine to start job scripts. The
       command interpreters can either be started as  login-shells  (i.e.  all
       system  and user default resource files like .login or .profile will be
       executed when the command interpreter is started, and  the  environment
       for  the  job will be set up as if the user has just logged in) or just
       for command execution (i.e. only  shell-specific  resource  files  like
       .cshrc  will be executed and a minimal default environment is set up by
       Grid Engine - see _q_s_u_b(1)).   The  parameter  llooggiinn__sshheellllss  contains  a
       comma-separated  list  of  the  executable  names of the command inter-
       preters to be started as login shells.  Shells in this  list  are  only
       started  as  login shells if the parameter sshheellll__ssttaarrtt__mmooddee (see above)
       is set to _p_o_s_i_x___c_o_m_p_l_i_a_n_t.

       Changes to llooggiinn__sshheellllss will take immediate effect.   The  default  for
       llooggiinn__sshheellllss is sh,bash,csh,tcsh,ksh.

       This value is a global configuration parameter only. It cannot be over-
       written by the execution host local configuration.

   mmiinn__uuiidd
       mmiinn__uuiidd places a lower bound on user IDs  that  may  use  the  cluster.
       Users  whose  user ID (as returned by _g_e_t_p_w_n_a_m(3)) is less than mmiinn__uuiidd
       will not be allowed to run jobs on the cluster.

       Changes to mmiinn__uuiidd will take immediate effect.  The default for mmiinn__uuiidd
       is 0.

       This value is a global configuration parameter only. It cannot be over-
       written by the execution host local configuration.

   mmiinn__ggiidd
       This parameter sets the lower bound on group IDs that may use the clus-
       ter.  Users whose default group ID (as returned by _g_e_t_p_w_n_a_m(3)) is less
       than mmiinn__ggiidd will not be allowed to run jobs on the cluster.

       Changes to mmiinn__ggiidd will take immediate effect.  The default for mmiinn__ggiidd
       is 0.

       This value is a global configuration parameter only. It cannot be over-
       written by the execution host local configuration.

   uusseerr__lliissttss
       The uusseerr__lliissttss parameter contains a comma-separated list of user access
       lists  as described in _a_c_c_e_s_s___l_i_s_t(5).  Each user contained in at least
       one of the access lists has access to the cluster.  If  the  uusseerr__lliissttss
       parameter  is  set  to  NONE  (the  default) any user has access if not
       explicitly excluded via the xxuusseerr__lliissttss parameter described below.   If
       a  user is contained both in an access list xxuusseerr__lliissttss and uusseerr__lliissttss,
       the user is denied access to the cluster.

       Changes to uusseerr__lliissttss will take immediate effect.

       This value is a global configuration parameter insofar as it  restricts
       access to the whole cluster, but the execution host local configuration
       may define a value to restrict access to that host further.

   xxuusseerr__lliissttss
       The xxuusseerr__lliissttss parameter  contains  a  comma-separated  list  of  user
       access lists as described in _a_c_c_e_s_s___l_i_s_t(5).  Each user contained in at
       least one of the access lists is denied access to the cluster.  If  the
       xxuusseerr__lliissttss parameter is set to NONE (the default) any user has access.
       If a user is contained both  in  an  access  list  in  xxuusseerr__lliissttss  and
       uusseerr__lliissttss (see above) the user is denied access to the cluster.

       Changes to xxuusseerr__lliissttss will take immediate effect.

       This  value is a global configuration parameter insofar as it restricts
       access to the whole cluster, but the execution host local configuration
       may define a value to restrict access to that host further.

   aaddmmiinniissttrraattoorr__mmaaiill
       aaddmmiinniissttrraattoorr__mmaaiill  specifies  a comma-separated list of the electronic
       mail address(es) of the cluster administrator(s)  to  whom  internally-
       generated  problem reports are sent. The mail address format depends on
       your electronic mail system and how it is configured; consult your sys-
       tem's configuration guide for more information.

       Changing  aaddmmiinniissttrraattoorr__mmaaiill  takes  immediate effect.  The default for
       aaddmmiinniissttrraattoorr__mmaaiill is an empty mail list.

       This value is a global configuration parameter only. It cannot be over-
       written by the execution host local configuration.

   pprroojjeeccttss
       The  pprroojjeeccttss  list  contains  all projects which are granted access to
       Grid Engine. Users belonging to none of these projects cannot use  Grid
       Engine.  If users belong to projects in the pprroojjeeccttss list and the xxpprroo--
       jjeeccttss list (see below), they also cannot use the system.

       Changing pprroojjeeccttss takes immediate effect.  The default for pprroojjeeccttss  is
       none.

       This value is a global configuration parameter only. It cannot be over-
       written by the execution host local configuration.

   xxpprroojjeeccttss
       The xxpprroojjeeccttss list contains all projects that are denied access to Grid
       Engine.  Users  belonging  to  one  of  these  projects cannot use Grid
       Engine. If users belong to projects in the pprroojjeeccttss  list  (see  above)
       and the xxpprroojjeeccttss list, they also cannot use the system.

       Changing  xxpprroojjeeccttss  takes immediate effect.  The default for xxpprroojjeeccttss
       is none.

       This value is a global configuration parameter only. It cannot be over-
       written by the execution host local configuration.

   llooaadd__rreeppoorrtt__ttiimmee
       System  load  is  reported  periodically  by  the  execution daemons to
       _s_g_e___q_m_a_s_t_e_r(8).  The parameter llooaadd__rreeppoorrtt__ttiimmee defines the time inter-
       val between load reports.

       Each  _s_g_e___e_x_e_c_d(8)  may  use  a  different  load  report time. Changing
       llooaadd__rreeppoorrtt__ttiimmee will take immediate effect.

       NNoottee:: Be careful when modifying llooaadd__rreeppoorrtt__ttiimmee.  Reporting  load  too
       frequently  might block _s_g_e___q_m_a_s_t_e_r(8) especially if the number of exe-
       cution hosts is  large.  Moreover,  since  the  system  load  typically
       increases  and  decreases  smoothly, frequent load reports hardly offer
       any benefit.

       The default for llooaadd__rreeppoorrtt__ttiimmee is 40 seconds.

       The global configuration entry for this value may be overwritten by the
       execution host local configuration.

   rreesscchheedduullee__uunnkknnoowwnn
       Determines  whether  jobs on hosts in an unknown state are rescheduled,
       and thus sent to other  hosts.  Hosts  are  registered  as  unknown  if
       _s_g_e___m_a_s_t_e_r(8)  cannot  establish  contact  to the _s_g_e___e_x_e_c_d(8) on those
       hosts (see mmaaxx__uunnhheeaarrdd).  Likely reasons are a breakdown of the host or
       a breakdown of the network connection in between, but also _s_g_e___e_x_e_c_d(8)
       may not be executing on such hosts.

       In any case, Grid Engine can reschedule jobs running on such  hosts  to
       another system.  rreesscchheedduullee__uunnkknnoowwnn controls the time which Grid Engine
       will wait before jobs are rescheduled after a host became unknown.  The
       time format specification is hh:mm:ss. If the special value 00:00:00 is
       set, then jobs will not be rescheduled from this host.

       Rescheduling is only initiated for jobs which have activated the  rerun
       flag  (see  the  --rr  yy  option  of  _q_s_u_b(1)  and  the  rreerruunn  option of
       _q_u_e_u_e___c_o_n_f(5)).  Parallel jobs are only  rescheduled  if  the  host  on
       which  their  master task executes is in unknown state. The behavior of
       rreesscchheedduullee__uunnkknnoowwnn for parallel jobs and for  jobs  without  the  rerun
       flag   set   can   be   adjusted   using  the  qqmmaasstteerr__ppaarraammss  settings
       EENNAABBLLEE__RREESSCCHHEEDDUULLEE__KKIILLLL and EENNAABBLLEE__RREESSCCHHEEDDUULLEE__SSLLAAVVEE..

       Checkpointing jobs will only be rescheduled when the wwhheenn option of the
       corresponding  checkpointing  environment contains an appropriate flag.
       (see _c_h_e_c_k_p_o_i_n_t(5)).  Interactive jobs (see _q_s_h(1), _q_r_s_h(1),  _q_t_c_s_h(1))
       are not rescheduled.

       The default for rreesscchheedduullee__uunnkknnoowwnn is 00:00:00

       The  global  configuration  entry for this value may be over written by
       the execution host local configuration.

   mmaaxx__uunnhheeaarrdd
       If _s_g_e___q_m_a_s_t_e_r(8) could not contact or was not contacted by the  execu-
       tion  daemon  of a host for mmaaxx__uunnhheeaarrdd seconds, all queues residing on
       that particular host are set to  status  unknown.   _s_g_e___q_m_a_s_t_e_r(8),  at
       least, should be contacted by the execution daemons in order to get the
       load  reports.  Thus,  mmaaxx__uunnhheeaarrdd   should   by   greater   than   the
       llooaadd__rreeppoorrtt__ttiimmee (see above).

       Changing   mmaaxx__uunnhheeaarrdd   takes   immediate  effect.   The  default  for
       mmaaxx__uunnhheeaarrdd is 5 minutes.

       This value is a global configuration parameter only. It cannot be over-
       written by the execution host local configuration.

   lloogglleevveell
       This  parameter  specifies  the level of detail that Grid Engine compo-
       nents such as _s_g_e___q_m_a_s_t_e_r(8) or _s_g_e___e_x_e_c_d(8) use  to  produce  informa-
       tive,  warning or error messages which are logged to the _m_e_s_s_a_g_e_s files
       in the master and execution daemon spool directories (see the  descrip-
       tion  of  the  eexxeeccdd__ssppooooll__ddiirr  parameter above). The following message
       levels are available:

       _l_o_g___e_r_r
              All error events recognized are logged.

       _l_o_g___w_a_r_n_i_n_g
              All error events recognized, and all detected  signs  of  poten-
              tially erroneous behavior, are logged.

       _l_o_g___i_n_f_o
              All  error events being recognized, all detected signs of poten-
              tially erroneous behavior, and a variety of informative messages
              are logged.

       Changing lloogglleevveell will take immediate effect.

       The default for lloogglleevveell is _l_o_g___w_a_r_n_i_n_g.

       This value is a global configuration parameter only. It cannot be over-
       written by the execution host local configuration.

   mmaaxx__aajj__iinnssttaanncceess
       This parameter defines the maximum number of array tasks to  be  sched-
       uled to run simultaneously per array job.  An instance of an array task
       will be created within the master daemon when it  gets  a  start  order
       from  the scheduler. The instance will be destroyed when the array task
       finishes.  Thus the parameter provides control mainly over  the  memory
       consumption  of  array jobs in the master daemon. It is most useful for
       very large clusters and very large array jobs.  The  default  for  this
       parameter  is  2000.  The  value  0 will deactivate this limit and will
       allow the scheduler to start  as  many  array  job  tasks  as  suitable
       resources are available in the cluster.

       Changing mmaaxx__aajj__iinnssttaanncceess will take immediate effect.

       This value is a global configuration parameter only. It cannot be over-
       written by the execution host local configuration.

   mmaaxx__aajj__ttaasskkss
       This parameter defines the maximum number of array job tasks within  an
       array  job.  _s_g_e___q_m_a_s_t_e_r(8) will reject all array job submissions which
       request more than mmaaxx__aajj__ttaasskkss array job tasks. The  default  for  this
       parameter is 75000. The value 0 will deactivate this limit.

       Changing mmaaxx__aajj__ttaasskkss will take immediate effect.

       This value is a global configuration parameter only. It cannot be over-
       written by the execution host local configuration.

   mmaaxx__uu__jjoobbss
       The number of active (not finished) jobs which each  Grid  Engine  user
       can  have in the system simultaneously is controlled by this parameter.
       A value greater than 0 defines the limit. The  default  value  0  means
       "unlimited".  If  the  mmaaxx__uu__jjoobbss limit is exceeded by a job submission
       then the submission command exits with exit status 25 and an  appropri-
       ate error message.

       Changing mmaaxx__uu__jjoobbss will take immediate effect.

       This value is a global configuration parameter only. It cannot be over-
       written by the execution host local configuration.

   mmaaxx__jjoobbss
       The number of active (not finished) jobs simultaneously allowed in Grid
       Engine  is controlled by this parameter. A value greater than 0 defines
       the limit.  The default value 0  means  "unlimited".  If  the  mmaaxx__jjoobbss
       limit is exceeded by a job submission then the submission command exits
       with exit status 25 and an appropriate error message.

       Changing mmaaxx__jjoobbss will take immediate effect.

       This value is a global configuration parameter only. It cannot be over-
       written by the execution host local configuration.

   mmaaxx__aaddvvaannccee__rreesseerrvvaattiioonnss
       The number of active (not finished) Advance Reservations simultaneously
       allowed in Grid Engine is controlled by this parameter. A value greater
       than 0 defines the limit. The default value 0 means "unlimited". If the
       mmaaxx__aaddvvaannccee__rreesseerrvvaattiioonnss limit is exceeded by  an  Advance  Reservation
       request  then  the  submission command exits with exit status 25 and an
       appropriate error message.

       Changing mmaaxx__aaddvvaannccee__rreesseerrvvaattiioonnss will take immediate effect.

       This value is a global configuration parameter only. It cannot be over-
       written by the execution host local configuration.

   eennffoorrccee__pprroojjeecctt
       If  set  to _t_r_u_e, users are required to request a project whenever sub-
       mitting a job. See the --PP option to _q_s_u_b(1) for details.

       Changing eennffoorrccee__pprroojjeecctt will take immediate effect.  The  default  for
       eennffoorrccee__pprroojjeecctt is _f_a_l_s_e.

       This value is a global configuration parameter only. It cannot be over-
       written by the execution host local configuration.

   eennffoorrccee__uusseerr
       If set to _t_r_u_e, a _u_s_e_r(5) must exist to allow for job submission.  Jobs
       are rejected if no corresponding user exists.

       If set to _a_u_t_o, a _u_s_e_r(5) object for the submitting user will automati-
       cally be created during job submission, if one does not already  exist.
       The aauuttoo__uusseerr__oottiicckkeett, aauuttoo__uusseerr__ffsshhaarree, aauuttoo__uusseerr__ddeeffaauulltt__pprroojjeecctt, and
       aauuttoo__uusseerr__ddeelleettee__ttiimmee configuration parameters will be used as  default
       attributes of the new _u_s_e_r(5) object.

       Changing  eennffoorrccee__uusseerr  will  take  immediate  effect.  The default for
       eennffoorrccee__uusseerr is _a_u_t_o.

       This value is a global configuration parameter only. It cannot be over-
       written by the execution host local configuration.

   aauuttoo__uusseerr__oottiicckkeett
       The  number  of  override  tickets  to  assign to automatically created
       _u_s_e_r(5)  objects.  User  objects  are  created  automatically  if   the
       eennffoorrccee__uusseerr attribute is set to _a_u_t_o.

       Changing  aauuttoo__uusseerr__oottiicckkeett will affect any newly created user objects,
       but will not change user objects created in the past.

       This value is a global configuration parameter only. It cannot be over-
       written by the execution host local configuration.

   aauuttoo__uusseerr__ffsshhaarree
       The  number  of  functional  shares  to assign to automatically created
       _u_s_e_r(5)  objects.  User  objects  are  created  automatically  if   the
       eennffoorrccee__uusseerr attribute is set to _a_u_t_o.

       Changing  aauuttoo__uusseerr__ffsshhaarree  will affect any newly created user objects,
       but will not change user objects created in the past.

       This value is a global configuration parameter only. It cannot be over-
       written by the execution host local configuration.

   aauuttoo__uusseerr__ddeeffaauulltt__pprroojjeecctt
       The default project to assign to automatically created _u_s_e_r(5) objects.
       User objects are created automatically if the eennffoorrccee__uusseerr attribute is
       set to _a_u_t_o.

       Changing  aauuttoo__uusseerr__ddeeffaauulltt__pprroojjeecctt  will affect any newly created user
       objects, but will not change user objects created in the past.

       This value is a global configuration parameter only. It cannot be over-
       written by the execution host local configuration.

   aauuttoo__uusseerr__ddeelleettee__ttiimmee
       The  number  of seconds of inactivity after which automatically created
       _u_s_e_r(5) objects will be deleted. User objects are created automatically
       if the eennffoorrccee__uusseerr attribute is set to _a_u_t_o. If the user has no active
       or pending jobs for the specified amount of time, the object will auto-
       matically  be  deleted.   A value of 0 can be used to indicate that the
       automatically created user object is permanent and should not be  auto-
       matically deleted.

       Changing  aauuttoo__uusseerr__ddeelleettee__ttiimmee  will  affect the deletion time for all
       users with active jobs.

       This value is a global configuration parameter only. It cannot be over-
       written by the execution host local configuration.

   sseett__ttookkeenn__ccmmdd
       SSeett__ttookkeenn__ccmmdd points to a command which sets and extends AFS tokens for
       Grid Engine jobs.  It is run _s_g_e___c_o_s_h_e_p_h_e_r_d(8).  In the  standard  Grid
       Engine  AFS  distribution, it is supplied as a script which expects two
       command line parameters. It reads the token  from  STDIN,  extends  the
       token's expiration time and sets the token:

              <set_token_cmd> <user> <token_extend_after_seconds>

       As a shell script this command will call the programs:

              - SetToken
              - forge

       which are provided by your distributor as source code. The script looks
       as follows:

              --------------------------------
              #!/bin/sh
              # set_token_cmd
              forge -u $1 -t $2 | SetToken
              --------------------------------

       Since it is necessary for _f_o_r_g_e to read the secret AFS  server  key,  a
       site might wish to replace the sseett__ttookkeenn__ccmmdd script by a command, which
       connects to a custom daemon at the AFS server. The token must be forged
       at  the AFS server and returned to the local machine, where _S_e_t_T_o_k_e_n is
       executed.

       Changing sseett__ttookkeenn__ccmmdd will take immediate  effect.   The  default  for
       sseett__ttookkeenn__ccmmdd is none.

       The global configuration entry for this value may be overwritten by the
       execution host local configuration.

   ppaagg__ccmmdd
       The path to your _p_a_g_s_h is specified via this parameter.  The  _s_g_e___s_h_e_p_-
       _h_e_r_d(8)  process and the job run in a _p_a_g_s_h. Please ask your AFS admin-
       istrator for details.

       Changing ppaagg__ccmmdd will take immediate effect.  The default  for  ppaagg__ccmmdd
       is none.

       The global configuration entry for this value may be overwritten by the
       execution host local configuration.

   ttookkeenn__eexxtteenndd__ttiimmee
       The ttookkeenn__eexxtteenndd__ttiimmee is the time period for which AFS tokens are peri-
       odically extended. Grid Engine will call the token extension 30 minutes
       before the tokens expire until jobs have finished and the corresponding
       tokens are no longer required.

       Changing ttookkeenn__eexxtteenndd__ttiimmee will take immediate effect.  The default for
       ttookkeenn__eexxtteenndd__ttiimmee is 24:0:0, i.e. 24 hours.

       The global configuration entry for this value may be overwritten by the
       execution host local configuration.

   sshheepphheerrdd__ccmmdd
       Alternative path to the sshheepphheerrdd__ccmmdd binary. Typically used to call the
       shepherd binary by a wrapper script or command.

       Changing sshheepphheerrdd__ccmmdd will take immediate effect. The default for sshheepp--
       hheerrdd__ccmmdd is none.

       The global configuration entry for this value may be overwritten by the
       execution host local configuration.

   ggiidd__rraannggee
       The ggiidd__rraannggee is a comma-separated list of  range  expressions  of  the
       form  n-m (n as well as m are integer numbers greater than 99), where m
       is an abbreviation for m-m. These numbers are used in  _s_g_e___e_x_e_c_d(8)  to
       identify processes belonging to the same job.

       Each _s_g_e___e_x_e_c_d(8) may use a separate set of group ids for this purpose.
       All numbers in the group id range have to be unused supplementary group
       ids on the system, where the _s_g_e___e_x_e_c_d(8) is started.

       Changing ggiidd__rraannggee will take immediate effect.  There is no default for
       ggiidd__rraannggee. The administrator will have to assign a value for  ggiidd__rraannggee
       during installation of Grid Engine.

       The global configuration entry for this value may be overwritten by the
       execution host local configuration.

   qqmmaasstteerr__ppaarraammss
       A list of additional parameters can be passed to the Grid Engine  qmas-
       ter. The following values are recognized:

       _E_N_A_B_L_E___E_N_F_O_R_C_E___M_A_S_T_E_R___L_I_M_I_T
              If this parameter is set then the ss__rrtt, hh__rrtt limits of a running
              job are tested and acted  on  by  the  _s_g_e___q_m_a_s_t_e_r(8)  when  the
              _s_g_e___e_x_e_c_d(8) where the job was run is in an unknown state.

              After  the  ss__rrtt  or  hh__rrtt limit of a job is expired, the master
              daemon will wait additional time defined by DDUURRAATTIIOONN__OOFFFFSSEETT (see
              _s_c_h_e_d___c_o_n_f(5)).   If  the  execution daemon still cannot be con-
              tacted when this additional time is  elapsed,  then  the  master
              daemon will force the deletion of the job (see --ff of _q_d_e_l(1)).

              For  jobs  which  will be deleted that way, an accounting record
              will be created.  For usage, the record will  contain  the  last
              reported  online  value  when the execution daemon could contact
              qmaster. The ffaaiilleedd state in the record will be  set  to  37  to
              indicate  that the job was terminated by a limit enforced by the
              master daemon.

              After the restart of _s_g_e___q_m_a_s_t_e_r(8) the limit  enforcement  will
              be triggered after twice the biggest llooaadd__rreeppoorrtt__iinntteerrvvaall inter-
              val defined in _s_g_e___c_o_n_f(5) has elapsed. This will give the  exe-
              cution  daemons  enough time to re-register with the master dae-
              mon.

       _E_N_A_B_L_E___F_O_R_C_E_D___Q_D_E_L___I_F___U_N_K_N_O_W_N
              If this parameter is set then a deletion request for  a  job  is
              automatically  interpreted  as a forced deletion request (see --ff
              of _q_d_e_l(1)) if the host where  the  job  is  running  is  in  an
              unknown state.

       _E_N_A_B_L_E___F_O_R_C_E_D___Q_D_E_L
              If  this  parameter  is  set, non-administrative users can force
              deletion of their own jobs via the _-_f option of _q_d_e_l(1).   With-
              out  this  parameter, forced deletion of jobs is only allowed by
              the Grid Engine manager or operator.

              NNoottee:: Forced deletion for jobs is executed differently,  depend-
              ing  on  whether users are Grid Engine administrators or not. In
              the case of administrative users, the jobs are removed from  the
              internal database of Grid Engine immediately. For regular users,
              the equivalent of a normal _q_d_e_l(1) is executed first, and  dele-
              tion is forced only if the normal cancellation was unsuccessful.

       _F_O_R_B_I_D___R_E_S_C_H_E_D_U_L_E
              If  this  parameter is set, re-queueing of jobs cannot be initi-
              ated by the job script which is under control of the user. With-
              out this parameter, jobs returning the value 99 are rescheduled.
              This can be used to cause the job to be restarted on a different
              machine,  for  instance if there are not enough resources on the
              current one.

       _F_O_R_B_I_D___A_P_P_E_R_R_O_R
              If this parameter is set, the application cannot set  itself  to
              the  error  state.   Without  this  parameter jobs returning the
              value 100 are set to the error state (and therefore can be manu-
              ally rescheduled by clearing the error state).  This can be used
              to set the job to the error state when a starting  condition  of
              the  application  is not fulfilled before the application itself
              has been started, or when a clean up procedure (e.g. in the epi-
              log)  decides  that it is necessary to run the job again.  To do
              so, return 100 in the prolog, pe_start, job script,  pe_stop  or
              epilog script.

       _D_I_S_A_B_L_E___A_U_T_O___R_E_S_C_H_E_D_U_L_I_N_G
              NNoottee:: Deprecated, may be removed in future release.
              If set to "true" or "1", the _r_e_s_c_h_e_d_u_l_e___u_n_k_n_o_w_n parameter is not
              taken into account.

       _E_N_A_B_L_E___R_E_S_C_H_E_D_U_L_E___K_I_L_L
              If set  to  "true"  or  "1",  the  _r_e_s_c_h_e_d_u_l_e___u_n_k_n_o_w_n  parameter
              affects  also  jobs which have the rerun flag not activated (see
              the  --rr  yy  option  of  _q_s_u_b(1)  and   the   rreerruunn   option   of
              _q_u_e_u_e___c_o_n_f(5)),  but  they  are  just  finished as they can't be
              rescheduled.

       _E_N_A_B_L_E___R_E_S_C_H_E_D_U_L_E___S_L_A_V_E
              If set to "true" or "1" Grid Engine  triggers  job  rescheduling
              also  when the host where the slave tasks of a parallel job exe-
              cutes is in unknown state, if the  _r_e_s_c_h_e_d_u_l_e___u_n_k_n_o_w_n  parameter
              is activated.

       _M_A_X___D_Y_N___E_C
              Sets  the  max  number of dynamic event clients (as used by qqssuubb
              --ssyynncc yy and by Grid Engine  DRMAA  API  library  sessions).  The
              default  is  set  to  99.   The  number of dynamic event clients
              should not be bigger than half of the number of file descriptors
              the  system has. The number of file descriptors are shared among
              the connections to all exec hosts, all event clients,  and  file
              handles that the qmaster needs.

       _M_O_N_I_T_O_R___T_I_M_E
              Specifies  the  time  interval  when  the monitoring information
              should be printed. The monitoring is disabled by default and can
              be  enabled  by  specifying an interval.  The monitoring is per-
              thread and is written to  the  messages  file  or  displayed  by
              _q_p_i_n_g(1) with option --ff.  Example: MONITOR_TIME=0:0:10 generates
              and prints the monitoring  information  approximately  every  10
              seconds.  The specified time is a guideline only and not a fixed
              interval. The interval that is actually  used  is  printed.   In
              this  example,  the interval could be anything between 9 seconds
              and 20 seconds.

       _L_O_G___M_O_N_I_T_O_R___M_E_S_S_A_G_E
              Monitoring information is logged  into  the  messages  files  by
              default.  This  information can be accessed via by _q_p_i_n_g(1).  If
              monitoring is always enabled,  the  messages  files  can  become
              quite  large.   This  switch  disables logging into the messages
              files, making _q_p_i_n_g _-_f the only source of monitoring data.

       Profiling provides the user with the possibility to get system measure-
       ments.  This can be useful for debugging or optimization of the system.
       The profiling output will be done within the messages file.

       _P_R_O_F___S_I_G_N_A_L
              Enables the profiling for qmaster signal thread (e.g.  PROF_SIG-
              NAL=true).

       _P_R_O_F___W_O_R_K_E_R
              Enables   the   profiling   for  qmaster  worker  threads  (e.g.
              PROF_WORKER=true).

       _P_R_O_F___L_I_S_T_E_N_E_R
              Enables  the  profiling  for  qmaster  listener  threads   (e.g.
              PROF_LISTENER=true).

       _P_R_O_F___D_E_L_I_V_E_R
              Enables  the  profiling  for  qmaster event deliver thread (e.g.
              PROF_DELIVER=true).

       _P_R_O_F___T_E_V_E_N_T
              Enables the profiling  for  qmaster  timed  event  thread  (e.g.
              PROF_TEVENT=true).

       Please  note  that the CPU utime and stime values contained in the pro-
       filing output are not per-thread CPU times.  These CPU usage statistics
       are  per-process  statistics.   So the printed profiling values for CPU
       mean "CPU time consumed by sge_qmaster (all threads) while the reported
       profiling level was active".

       _S_T_R_E_E___S_P_O_O_L___I_N_T_E_R_V_A_L
              Sets  the  time  interval  for spooling the sharetree usage. The
              default is set to 00:04:00. The setting accepts  colon-separated
              string  or  seconds.  There  is no setting to turn the sharetree
              spooling off.  (e.g. STREE_SPOOL_INTERVAL=00:02:00)

       _M_A_X___J_O_B___D_E_L_E_T_I_O_N___T_I_M_E
              Sets the value of how long the qmaster will spend deleting jobs.
              After  this time, the qmaster will continue with other tasks and
              schedule the deletion of remaining jobs at  a  later  time.  The
              default  value  is  3  seconds,  and will be used if no value is
              entered. The range of valid values is  >  0  and  <=  5.   (e.g.
              MAX_JOB_DELETION_TIME=1)

       _g_d_i___t_i_m_e_o_u_t'
              Sets  how  long the communication will wait for GDI send/receive
              operations.  (GDI is the  Grid  Engine  Database  Interface  for
              interacting  with  objects managed by the qmaster.)  The default
              value is set to 60 seconds. After this time,  the  communication
              library  will  retry,  if "gdi_retries" is configured, receiving
              the GDI request. If not configured the communication will return
              with  a "gdi receive failure" (e.g. gdi_timeout=120 will set the
              timeout time to 120 sec).  Configuring no gdi_timeout value, the
              value defaults to 60 sec.

       _g_d_i___r_e_t_r_i_e_s
              Sets  how  often the GDI receive call will be repeated until the
              GDI receive error appears. The default is set to 0. In this case
              the  call  will be done 1 time with no retry.  Setting the value
              to -1 the call will be done permanently. In combination with the
              gdi_timeout parameter it is possible to configure a system with,
              e.g. slow NFS, to make sure that all  jobs  will  be  submitted.
              (E.g. gdi_retries=4.)

       _c_l___p_i_n_g
              Turns  on/off  a communication library ping. This parameter will
              create additional debug output.  This output  shows  information
              about the error messages which are returned by communication and
              it will give information about the  application  status  of  the
              qmaster.  For example, if it's unclear what's the reason for gdi
              timeouts, this may show you some useful  messages.  The  default
              value is false (off) (i.e. cl_ping=false).

       _S_C_H_E_D_U_L_E_R___T_I_M_E_O_U_T
              Setting  this  parameter allows the scheduler GDI event acknowl-
              edge timeout to be manually configured to a specific value. Cur-
              rently  the  default value is 10 minutes with the default sched-
              uler configuration and limited between  600  and  1200  seconds.
              Value  is  limited  only  in case of default value.  The default
              value depends on the current scheduler configuration. The _S_C_H_E_D_-
              _U_L_E_R___T_I_M_E_O_U_T value is specified in seconds.

       _j_s_v___t_i_m_e_o_u_t
              This  parameter measures the response time of the server JSV. In
              the event that the response time of the JSV is longer  than  the
              timeout  value  specified,  this  will  cause  the JSV to be re-
              started. The default value for the timeout is 10 seconds and  if
              modified, must be greater than 0. If the timeout is reached, the
              JSV will only try to re-start once; if the  timeout  is  reached
              again, an error will occur.

       _j_s_v___t_h_r_e_s_h_o_l_d
              The  threshold of a JSV is measured as the time it takes to per-
              form a server job verification. If this value  is  greater  than
              the  user-defined  value, it will cause logging to appear in the
              qmaster messages file at the INFO level. By setting  this  value
              to 0, all jobs will be logged in the qmaster messages file. This
              value is specified in milliseconds and has a  default  value  of
              5000.

       _O_L_D___R_E_S_C_H_E_D_U_L_E___B_E_H_A_V_I_O_R
              Beginning  with  version  8.0.0  of  Grid  Engine the scheduling
              behavior  changed  for  jobs  that  are  rescheduled  by  users.
              Rescheduled jobs will not be put at the beginning of the pending
              job list anymore. The submit time of those jobs is  set  to  the
              end  time  of  the  previous run. Due to that, those rescheduled
              jobs will be appended to the pending job list as if  a  new  job
              had been submitted. To achieve the old behaviour, set the param-
              eter _O_L_D___R_E_S_C_H_E_D_U_L_E___B_E_H_A_V_I_O_R. Please note that this parameter is
              deprecated, so it might be removed with the next minor release.

       _O_L_D___R_E_S_C_H_E_D_U_L_E___B_E_H_A_V_I_O_R___A_R_R_A_Y___J_O_B
              Beginning  with  version  8.0.0  of  Grid  Engine the scheduling
              behavior changed for array job tasks  that  are  rescheduled  by
              users.  As  soon  as  an  array  job  task gets rescheduled, all
              remaining pending tasks of that job will be put at  the  end  of
              the  pending  job  list. To achieve the old scheduling behaviour
              set the parameter _O_L_D___R_E_S_C_H_E_D_U_L_E___B_E_H_A_V_I_O_R___A_R_R_A_Y___J_O_B. Please note
              that  this  parameter is deprecated, so it might be removed with
              the next minor release.

       Changing  qqmmaasstteerr__ppaarraammss  will  take  immediate  effect,  except   that
       gdi_timeout,  gdi_retries,  and  cl_ping  will take effect only for new
       connections.  The default for qqmmaasstteerr__ppaarraammss is none.

       This value is a global configuration parameter only. It cannot be over-
       written by the execution host local configuration.

   eexxeeccdd__ppaarraammss
       This  is used for passing additional parameters to the Grid Engine exe-
       cution daemon. The following values are recognized:

       _A_C_C_T___R_E_S_E_R_V_E_D___U_S_A_G_E
              If this parameter  is  set  to  true,  the   usage  of  reserved
              resources  is  used  for  the accounting entries ccppuu, mmeemm and iioo
              instead of the measured usage.

       _E_N_A_B_L_E___W_I_N_D_O_M_A_C_C
              If this parameter is set to true, Windows Domain accounts  (Win-
              DomAcc)  are  used  on Windows hosts. These accounts require the
              use of _s_g_e_p_a_s_s_w_d(1).  (See also _s_g_e_p_a_s_s_w_d(5).)  If this  parame-
              ter  is  set to false, or is not set, local Windows accounts are
              used.  On non-Windows hosts, this parameter is ignored.

       _I_G_N_O_R_E___N_G_R_O_U_P_S___M_A_X___L_I_M_I_T
              If a user is assigned to NGROUPS_MAX-1 supplementary groups,  so
              that  Grid  Engine is not able to add one for job tracking, then
              the job will  go  into  an  error  state  when  it  is  started.
              (NGROUPS_MAX  is  the  system limit on supplementary groups; see
              _l_i_m_i_t_s_._h(7).)  Administrators that want to  prevent  the  system
              doing  so  can set this parameter.  In this case the NGROUPS_MAX
              limit is ignored and the additional group (see _g_i_d___r_a_n_g_e) is not
              set.  As  a result for those jobs no online usage will be avail-
              able. Also the parameter _E_N_A_B_L_E___A_D_D_G_R_P___K_I_L_L will have no effect.
              Please  note  that  it is not recommended to use this parameter.
              Instead the group  membership  of  the  submit  user  should  be
              reduced.

       _K_E_E_P___A_C_T_I_V_E
              This  value should only be set for debugging purposes. If set to
              true, the execution daemon will not remove the  spool  directory
              maintained by _s_g_e___s_h_e_p_h_e_r_d(8) for a job.

       _P_T_F___M_I_N___P_R_I_O_R_I_T_Y, _P_T_F___M_A_X___P_R_I_O_R_I_T_Y
              The  maximum/minimum priority which Grid Engine will assign to a
              job.  Typically this is a negative/positive value in  the  range
              of -20 (maximum) to 19 (minimum) for systems which allow setting
              of priorities with the _n_i_c_e(2) system call.  Other  systems  may
              provide different ranges.
              The  default priority range (which varies from system to system)
              is installed either by removing the parameters, or by setting  a
              value of -999.
              See  the  "messages" file of the execution daemon for the prede-
              fined default value on your hosts. The values are logged  during
              the startup of the execution daemon.

       _P_R_O_F___E_X_E_C_D
              Enables   the   profiling   for   the   execution  daemon  (e.g.
              PROF_EXECD=true).

       _N_O_T_I_F_Y___K_I_L_L
              This parameter allows you to change the notification signal  for
              the  signal  SIGKILL  (see  the _-_n_o_t_i_f_y option of _q_s_u_b(1)).  The
              parameter either accepts signal names  (use  the  _-_l  option  of
              _k_i_l_l(1)) or the special value _n_o_n_e. If set to _n_o_n_e, no notifica-
              tion signal will be sent. If it is set to _T_E_R_M, for instance, or
              another  signal name, then this signal will be sent as the noti-
              fication signal.

       _N_O_T_I_F_Y___S_U_S_P
              With this parameter it is possible to  modify  the  notification
              signal  for  the  signal  SIGSTOP  (see the _-_n_o_t_i_f_y parameter of
              _q_s_u_b(1)).  The parameter either accepts signal names (use the _-_l
              option of _k_i_l_l(1)) or the special value _n_o_n_e. If set to _n_o_n_e, no
              notification signal will be sent. If it  is  set  to  _T_S_T_P,  for
              instance,  or another signal name, then this signal will be sent
              as notification signal.

       _S_H_A_R_E_T_R_E_E___R_E_S_E_R_V_E_D___U_S_A_G_E
              NNoottee:: Deprecated, may be removed in future release.
              If this  parameter  is  set  to  true,  the  usage  of  reserved
              resources  is  taken  for the Grid Engine share tree consumption
              instead of measured usage.
              NNoottee::  When  running  tightly  integrated   jobs   with   _S_H_A_R_E_-
              _T_R_E_E___R_E_S_E_R_V_E_D___U_S_A_G_E  set, and with _a_c_c_o_u_n_t_i_n_g___s_u_m_m_a_r_y enabled in
              the parallel environment, reserved usage will only  be  reported
              by  the  master  task of the parallel job.  No per-parallel task
              usage records will be sent from execd to qmaster, which can sig-
              nificantly  reduce  load  on  qmaster when running large tightly
              integrated parallel jobs.

       _U_S_E___Q_S_U_B___G_I_D
              If this parameter is set to true, the primary group  id   active
              when a job was submitted will be set to become the primary group
              id for job execution. If the parameter is not set,  the  primary
              group  id  as  defined  for  the job owner in the execution host
              passwd database is used.
              The feature is only available for jobs  submitted  via  _q_s_u_b(1),
              _q_r_s_h(1), _q_m_a_k_e(1) and _q_t_c_s_h(1).  Also, it only works for _q_r_s_h(1)
              jobs (and thus also for _q_t_c_s_h(1) and _q_m_a_k_e(1)) If builtin commu-
              nication  is used, or the rsh and rshd components which are pro-
              vided with Grid Engine (see _r_e_m_o_t_e___s_t_a_r_t_u_p(5)).

       _S___D_E_S_C_R_I_P_T_O_R_S,  _H___D_E_S_C_R_I_P_T_O_R_S,  _S___M_A_X_P_R_O_C,  _H___M_A_X_P_R_O_C,  _S___M_E_M_O_R_Y_L_O_C_K_E_D,
       _H___M_E_M_O_R_Y_L_O_C_K_E_D, _S___L_O_C_K_S, _H___L_O_C_K_S
              Specifies  soft  and  hard resource limits as implemented by the
              _s_e_t_r_l_i_m_i_t(2) system call. See that manual page  on  your  system
              for more information. These parameters complete the list of lim-
              its set by the RESOURCE LIMITS parameter of the queue configura-
              tion  as described in _q_u_e_u_e___c_o_n_f(5).  Unlike the resource limits
              in the queue configuration, these resource limits  are  set  for
              every  job  on this execution host. If a value is not specified,
              the resource  limit  is  inherited  from  the  execution  daemon
              process.  Because  this  would  lead to unpredictable results if
              only one limit of a resource is set (soft or hard),  the  corre-
              sponding other limit is set to the same value.
              _S___D_E_S_C_R_I_P_T_O_R_S and _H___D_E_S_C_R_I_P_T_O_R_S specify a value one greater than
              the maximum file descriptor number that can  be  opened  by  any
              process of a job.
              _S___M_A_X_P_R_O_C  and _H___M_A_X_P_R_O_C specify the maximum number of processes
              that can be created by the job user on this execution host.
              _S___M_E_M_O_R_Y_L_O_C_K_E_D and _H___M_E_M_O_R_Y_L_O_C_K_E_D specify the maximum number  of
              bytes of virtual memory that may be locked into RAM.
              _S___L_O_C_K_S and _H___L_O_C_K_S specify the maximum number of file locks any
              process of a job may establish.
              All of these values can be specified using the  multiplier  let-
              ters k, K, m, M, g and G; see _s_g_e___t_y_p_e_s(1) for details.

       _I_N_H_E_R_I_T___E_N_V
              This  parameter  indicates whether the shepherd should allow the
              environment inherited by the execution  daemon  from  the  shell
              that  started it to be inherited by the job it's starting.  When
              true, any environment variable that is set in  the  shell  which
              starts  the execution daemon at the time the execution daemon is
              started will be set in the environment of any jobs run  by  that
              execution  daemon, unless the environment variable is explicitly
              overridden, such as PATH or LOGNAME.  If set to false, each  job
              starts  with  only the environment variables that are explicitly
              passed on by the execution daemon, such  as  PATH  and  LOGNAME.
              The default value is true.

       _S_E_T___L_I_B___P_A_T_H
              This  parameter  tells  the  execution daemon whether to add the
              Grid Engine shared library directory to the library path of exe-
              cuted  jobs.   If  set  to  true, and INHERIT_ENV is also set to
              true, the Grid Engine shared library directory will be prepended
              to  the  library  path  which  is inherited from the shell which
              started the execution daemon.  If INHERIT_ENV is set  to  false,
              the  library  path  will  contain  only  the  Grid Engine shared
              library directory.  If set to false, and INHERIT_ENV is  set  to
              true,  the  library  path  exported  to  the job will be the one
              inherited from the shell which started the execution daemon.  If
              INHERIT_ENV  is  also  set  to  false,  the library path will be
              empty.  After the execution daemon has set the library path,  it
              may  be  further  altered  by the shell in which the job is exe-
              cuted, or by the job  script  itself.   The  default  value  for
              SET_LIB_PATH is false.

       _E_N_A_B_L_E___A_D_D_G_R_P___K_I_L_L
              If this parameter is set then Grid Engine uses the supplementary
              group ids (see _g_i_d___r_a_n_g_e) to identify all processes which are to
              be  terminated  when  a  job is deleted, or when _s_g_e___s_h_e_p_h_e_r_d(8)
              cleans up after job termination.

       _P_D_C___I_N_T_E_R_V_A_L
              This parameter defines the interval  between  runs  of  the  PDC
              (Portable  Data  Collector)  by the execution daemon. The PDC is
              responsible for enforcing  the  resource  limits  s_cpu,  h_cpu,
              s_vmem  and h_vmem (see _q_u_e_u_e___c_o_n_f(5)) and job usage collection.
              The parameter can be set to a time_specifier (see _s_g_e___t_y_p_e_s(5)),
              to PPEERR__LLOOAADD__RREEPPOORRTT or to NNEEVVEERR.
              If this parameter is set to PPEERR__LLOOAADD__RREEPPOORRTT the PDC is triggered
              in the same interval as llooaadd__rreeppoorrtt__ttiimmee (see  above).  If  this
              parameter  is  set  to NNEEVVEERR the PDC run is never triggered. The
              default is 1 second.
              NNoottee:: A PDC run is quite compute intensive, and may degrade  the
              performance  of the running jobs.  However, if the PDC runs less
              often, or never, the online usage can be incomplete  or  totally
              missing  (for  example  online  usage of very short running jobs
              might be missing) and the resource  limit  enforcement  is  less
              accurate or would not happen if PDC is turned off completely.

       _E_N_A_B_L_E___B_I_N_D_I_N_G
              If  this  parameter  is  set,  then Grid Engine enables the core
              binding module within the  execution  daemon  to  apply  binding
              parameters  that are specified at submission time of a job. This
              parameter is not set by  default,  and  therefore  all  binding-
              related  information will be ignored.  Find more information for
              job to core binding in the section _-_b_i_n_d_i_n_g of _q_s_u_b(1).

       Changing eexxeeccdd__ppaarraammss will take effect after it is  propagated  to  the
       execution daemons. The propagation is done in one load report interval.
       The default for eexxeeccdd__ppaarraammss is none.

       The global configuration entry for this value may be overwritten by the
       execution host local configuration.

   rreeppoorrttiinngg__ppaarraammss
       Used  to  define  the  behavior of reporting modules in the Grid Engine
       qmaster. Changes to the rreeppoorrttiinngg__ppaarraammss take  immediate  effect.   The
       following values are recognized:

       _a_c_c_o_u_n_t_i_n_g
              If  this  parameter is set to true, the accounting file is writ-
              ten.  The accounting file is a prerequisite for _q_a_c_c_t(1).

       _r_e_p_o_r_t_i_n_g
              If this parameter is set to true, the reporting file is written.
              The reporting file contains data that can be used for monitoring
              and analysis, like job accounting, job log, host load  and  con-
              sumables, queue status and consumables, and sharetree configura-
              tion and usage.  Attention: Depending on the size  and  load  of
              the  cluster,  the  reporting  file can become quite large. Only
              activate the reporting file if you have a process  running  that
              will  consume  the reporting file!  See _r_e_p_o_r_t_i_n_g(5) for further
              information about the format and contents of the reporting file.

       _f_l_u_s_h___t_i_m_e
              The contents of the reporting file  are  buffered  in  the  Grid
              Engine  qmaster  and flushed at a fixed interval.  This interval
              can be configured with the _f_l_u_s_h___t_i_m_e parameter.  It  is  speci-
              fied  as  a  time value in the format HH:MM:SS.  Sensible values
              range from a few seconds to one minute. Setting it too  low  may
              slow down the qmaster. Setting it too high will make the qmaster
              consume large amounts of memory for buffering data.

       _a_c_c_o_u_n_t_i_n_g___f_l_u_s_h___t_i_m_e
              The contents of the accounting file are  buffered  in  the  Grid
              Engine  qmaster  and flushed at a fixed interval.  This interval
              can be configured with the _a_c_c_o_u_n_t_i_n_g___f_l_u_s_h___t_i_m_e parameter.   It
              is  specified  as a time value in the format HH:MM:SS.  Sensible
              values range from a few seconds to one minute.  Setting  it  too
              low may slow down the qmaster. Setting it too high will make the
              qmaster consume large amounts  of  memory  for  buffering  data.
              Setting  it  to 00:00:00 will disable accounting data buffering;
              as soon as data is generated, it will be written to the account-
              ing  file.   If  this  parameter is not set, the accounting data
              flush interval will default  to  the  value  of  the  _f_l_u_s_h___t_i_m_e
              parameter.

       _j_o_b_l_o_g If  this  parameter is set to true, the reporting file will con-
              tain job logging information. See _r_e_p_o_r_t_i_n_g(5) for more informa-
              tion about job logging.

       _s_h_a_r_e_l_o_g
              The  Grid  Engine  qmaster  can dump information about sharetree
              configuration and use to  the  reporting  file.   The  parameter
              _s_h_a_r_e_l_o_g sets an interval in which sharetree information will be
              dumped.  It is set in the format HH:MM:SS. A value  of  00:00:00
              configures  qmaster not to dump sharetree information. Intervals
              of several minutes up to hours  are  sensible  values  for  this
              parameter.   See  _r_e_p_o_r_t_i_n_g(5)  for  further  information  about
              sharelog.

       _l_o_g___c_o_n_s_u_m_a_b_l_e_s
              This parameter controls writing of consumable resources  to  the
              reporting  file.  When set to (lloogg__ccoonnssuummaabblleess==ttrruuee) information
              about all consumable resources (their current  usage  and  their
              capacity) will be written to the reporting file, whenever a con-
              sumable resource changes either in definition, or  in  capacity,
              or  when  the  usage  of  a  consumable  resource changes.  When
              lloogg__ccoonnssuummaabblleess is set to ffaallssee (default), only those  variables
              will be written to the reporting file that are configured in the
              rreeppoorrtt__vvaarriiaabblleess   in   the   exec   host   configuration.   See
              _h_o_s_t___c_o_n_f(5) for further information about rreeppoorrtt__vvaarriiaabblleess.

   ffiinniisshheedd__jjoobbss
       NNoottee:: Deprecated, may be removed in a future release.
       Grid  Engine  stores  a certain number of _j_u_s_t _f_i_n_i_s_h_e_d jobs to provide
       post mortem status information  via  _q_s_t_a_t  _-_s  _z.   The  ffiinniisshheedd__jjoobbss
       parameter  defines  the number of finished jobs stored. If this maximum
       number is reached, the eldest finished job will be discarded for  every
       new job added to the finished job list.

       Changing  ffiinniisshheedd__jjoobbss  will  take  immediate effect.  The default for
       ffiinniisshheedd__jjoobbss is 100.

       This value is a global configuration parameter only. It cannot be over-
       written by the execution host local configuration.

   qqllooggiinn__ddaaeemmoonn
   qqllooggiinn__ccoommmmaanndd
   rrllooggiinn__ddaaeemmoonn
   rrllooggiinn__ccoommmmaanndd
   rrsshh__ddaaeemmoonn
   rrsshh__ccoommmmaanndd
       These  three  pairs  of  entries  are responsible for defining a remote
       startup method for either interactive  jobs  by  _q_l_o_g_i_n(1)  or  _q_r_s_h(1)
       wwiitthhoouutt  a  command,  or an interactive _q_r_s_h(1) request wwiitthh a command.
       The last startup method is also used to startup tasks on a  slave  exe-
       chost  of a tightly integrated parallel job.  Each pair for one startup
       method must contain matching communication  methods.  All  entries  can
       contain  the  value  bbuuiillttiinn (which is the default) or a full path to a
       binary which should be used, and additional arguments to  this  command
       if necessary.

       The  entries  for  the  three ......__ccoommmmaanndd definitions can, in addition,
       contain the value NNOONNEE in case a particular startup  method  should  be
       disabled.

       Changing any of these entries will take immediate effect.

       The global configuration entries for these values may be overwritten by
       a execution host local configuration.

       See _r_e_m_o_t_e___s_t_a_r_t_u_p(5) for a detailed explanation of these settings.

   ddeelleeggaatteedd__ffiillee__ssttaaggiinngg
       This flag must be set to "true" when the prolog and  epilog  are  ready
       for  delegated  file staging, so that the DRMAA attribute 'drmaa_trans-
       fer_files' is supported. To establish delegated file staging,  use  the
       variables  beginning  with  "$fs_..."  in prolog and epilog to move the
       input, output and error files from one host to the  other.   When  this
       flag  is  set  to  "false",  no file staging is available for the DRMAA
       interface. File staging is currently implemented  only  via  the  DRMAA
       interface.   When  an  error  occurs while moving the input, output and
       error files, return error code 100 so that the error handling mechanism
       can handle the error correctly. (See also FORBID_APPERROR.)

   rreepprriioorriittiizzee
       NNoottee:: Deprecated, may be removed in future release.
       This  flag  enables  or  disables the reprioritization of jobs based on
       their ticket amount. The rreepprriioorriittiizzee__iinntteerrvvaall in  _s_c_h_e_d___c_o_n_f(5)  takes
       effect only if rreepprriioorriittiizzee is set to true. To turn off job reprioriti-
       zation, the rreepprriioorriittiizzee flag must be set to false  and  the  rreepprriioorrii--
       ttiizzee__iinntteerrvvaall to 0, which is the default.

       This value is a global configuration parameter only. It cannot be over-
       ridden by the execution host local configuration.

   jjssvv__uurrll
       This setting defines a server JSV instance which will  be  started  and
       triggered by the _s_g_e___q_m_a_s_t_e_r(8) process. This JSV instance will be used
       to verify job specifications of  jobs  before  they  are  accepted  and
       stored in the internal master database.  The global configuration entry
       for this value cannot be overwritten by execution host local configura-
       tions.

       Find more details concerning JSV in _j_s_v(1) and _s_g_e___r_e_q_u_e_s_t(1).

       The syntax of the jjssvv__uurrll is specified in _s_g_e___t_y_p_e_s(1).

   jjssvv__aalllloowweedd__mmoodd
       If  there  is  a  server JSV script defined with the jjssvv__uurrll parameter,
       then all _q_a_l_t_e_r(1)  or  _q_m_o_n(1)  modification  requests  for  jobs  are
       rejected  by qmaster. With the jjssvv__aalllloowweedd__mmoodd parameter an administra-
       tor has the possibility to allow a set of switches which  can  then  be
       used  with clients to modify certain job attributes. The value for this
       parameter has to be a comma-separated list of JSV job  parameter  names
       as documented in _q_s_u_b(1), or the value nnoonnee to indicate that no modifi-
       cation should be allowed.  Please note that even if nnoonnee is  specified,
       the switches --ww and --tt are allowed for qalter.

   lliibbjjvvmm__ppaatthh
       lliibbjjvvmm__ppaatthh  is  usually  set during qmaster installation and points to
       the absolute path of libjvm.so (or the corresponding library  depending
       on  your  architecture - e.g. /usr/java/jre/lib/i386/server/libjvm.so).
       The referenced libjvm version must be at least 1.5.  It  is  needed  by
       the  JVM  qmaster thread only. If the Java VM needs additional starting
       parameters they can be set  in  aaddddiittiioonnaall__jjvvmm__aarrggss.  Whether  the  JVM
       thread  is  started  at all can be defined in the _b_o_o_t_s_t_r_a_p(5) file. If
       libjvm_path is empty, or an incorrect path, the  JVM  thread  fails  to
       start.

       The global configuration entry for this value may be overwritten by the
       execution host local configuration.

   aaddddiittiioonnaall__jjvvmm__aarrggss
       aaddddiittiioonnaall__jjvvmm__aarrggss  is  usually  set  during   qmaster   installation.
       Details  about  possible values aaddddiittiioonnaall__jjvvmm__aarrggss can be found in the
       help output of the accompanying Java command. This setting is  normally
       not needed.

       The global configuration entry for this value may be overwritten by the
       execution host local configuration.

SSEEEE AALLSSOO
       _s_g_e___i_n_t_r_o(1), _c_s_h(1), _q_c_o_n_f(1), _q_s_u_b(1), _j_s_v(1), _r_s_h(1), _s_h(1),  _g_e_t_p_w_-
       _n_a_m(3),      _d_r_m_a_a___a_t_t_r_i_b_u_t_e_s(3),     _q_u_e_u_e___c_o_n_f(5),     _s_c_h_e_d___c_o_n_f(5),
       _s_g_e___t_y_p_e_s(1), _s_g_e___e_x_e_c_d(8), _s_g_e___q_m_a_s_t_e_r(8),  _s_g_e___s_h_e_p_h_e_r_d(8),  _c_r_o_n(8),
       _r_e_m_o_t_e___s_t_a_r_t_u_p(5), _G_r_i_d _E_n_g_i_n_e _I_n_s_t_a_l_l_a_t_i_o_n _a_n_d _A_d_m_i_n_i_s_t_r_a_t_i_o_n _G_u_i_d_e_.

CCOOPPYYRRIIGGHHTT
       See _s_g_e___i_n_t_r_o(1) for a full statement of rights and permissions.



SGE 8.0.0                $Date: 2011-05-20 14:05:13 $              SGE_CONF(5)
