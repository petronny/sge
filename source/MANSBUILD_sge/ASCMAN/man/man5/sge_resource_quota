SGE_RESOURCE_QUOTA(5)      Grid Engine File Formats      SGE_RESOURCE_QUOTA(5)



NNAAMMEE
       SGE_resource_quota - Grid Engine resource quota file format

DDEESSCCRRIIPPTTIIOONN
       Resource  quota sets (rqs) are a flexible way to set a maximum resource
       consumption for any job requests. They are used  by  the  scheduler  to
       select the next possible jobs for running.  The job request distinction
       is done by a set of user, project, cluster queue, host  and  pe  filter
       criteria.

       By using the resource quota sets administrators are allowed to define a
       fine granular resource quota configuration. This helps restricting some
       job requests to a lesser resource usage and granting other job requests
       a higher resource usage.

       Note: Jobs requesting an Advance Reservation (AR) are  not  honored  by
       Resource Quotas and are neither subject of the resulting limit, nor are
       debited in the usage consumption.

       A list of currently configured rqs can be displayed  via  the  _q_c_o_n_f(1)
       --ssrrqqssll  option. The contents of each listed rqs definition can be shown
       via the --ssrrqqss switch. The output follows the _S_G_E___r_e_s_o_u_r_c_e___q_u_o_t_a  format
       description.  New  rqs  can be created and existing can be modified via
       the --aarrqqss, --mmrrqqss and --ddrrqqss options to _q_c_o_n_f(1).

       A resource quota set defines a maximum resource quota for a  particular
       job  request.  All  of  the configured rule sets apply all of the time.
       This means that if multiple resource quota sets are defined,  the  most
       restrictive set is used.

       Every  resource  quota set consist of one or more resource quota rules.
       These rules are evaluated in order, and the first rule that  matches  a
       specific  request  will be used. A resource quota set always results in
       at most one effective resource quota rule for a specific request.

       Note, Grid Engine allows backslashes (\)  be  used  to  escape  newline
       (\newline)  characters. The backslash and the newline are replaced with
       a space (" ") character before any interpretation.

FFOORRMMAATT
       A resource quota set definition contains the following parameters:

   nnaammee
       The resource quota set name.

   eennaabblleedd
       If set to _t_r_u_e the resource quota set is active and will be  considered
       for scheduling decisions. The default value is _f_a_l_s_e.

   ddeessccrriippttiioonn
       This  description field is optional and can be set to arbitrary string.
       The default value is _N_O_N_E.

   lliimmiitt
       Every resource quota set needs at least one resource quota rule defini-
       tion  started by the limit field. It's possible to define more resource
       quota rules divided by a new line.  A resource quota rule  consists  of
       an  optional  name,  the  filters  for  a  specific job request and the
       resource quota limit.

       By default, the expressed limit counts for the entire filter scope.  To
       express  a  filter-scope-specific  limit,  it's  possible  to define an
       expanded list by setting the list between '{' '}'. It's  only  possible
       to  set one complete filter in an expanded list.  The tags for express-
       ing a resource quota rule are:

       name   The name of the rule. The use is optional. The rule name must be
              unique in one resource quota set.

       users  Contains  a  comma  separated  list  of  UNIX users or ACLs (see
              _a_c_c_e_s_s___l_i_s_t(5)).  This parameter filters for jobs by a  user  in
              the  list  or  one  of the ACLs in the list. Any user not in the
              list will not be considered for the  resource  quota  rule.  The
              default  value is '*', which means any user. An ACL is differen-
              tiated from a UNIX user name by prefixing the ACL name  with  an
              '@'  sign.  To exclude a user or ACL from the rule, the name can
              be prefixed with the '!' sign. Defined UNIX user  or  ACL  names
              need not be known in the Grid Engine configuration.

       projects
              Contains  a  comma  separated list of projects (see _p_r_o_j_e_c_t(5)).
              This parameter filters for jobs  requesting  a  project  in  the
              list. Any project not in the list will not be considered for the
              resource quota rule. If no  project  filter  is  specified,  all
              projects  and jobs with no requested project match the rule. The
              value '*' means all jobs with requested projects. To  exclude  a
              project  from  the  rule,  the name can be prefixed with the '!'
              sign.  The value '!*' means only jobs with no project requested.

       pes    Contains a comma separated list of PEs  (see  _s_g_e___p_e(5)).   This
              parameter  filters  for jobs requesting a pe in the list. Any PE
              not in the list will not be considered for  the  resource  quota
              rule.  If  no  pe  filter  is specified, all pe and jobs with no
              requested pe matches the rule. The value '*' means all jobs with
              requested  pe.  To  exclude  a pe from the rule, the name can be
              prefixed with the '!' sign. The value '!*' means only jobs  with
              no pe requested.

       queues Contains   a   comma  separated  list  of  cluster  queues  (see
              _q_u_e_u_e___c_o_n_f(5)).  This parameter filters for  jobs  that  may  be
              scheduled  in  a  queue  in the list.  Any queue not in the list
              will not be considered for the resource quota rule. The  default
              value is '*', which means any queue. To exclude a queue from the
              rule, the name can be prefixed with the '!' sign.

       hosts  Contains a comma separated  list  of  host  or  hostgroups  (see
              _h_o_s_t(5) and _h_o_s_t_g_r_o_u_p(5)).  This parameter filters for jobs that
              may be scheduled in a host in the list or a host contained in  a
              hostgroup in the list. Any host not in the list will not be con-
              sidered for the resource quota rule. The default value  is  '*',
              which  means  any hosts. To exclude a host or hostgroup from the
              rule, the name can be prefixed with the '!' sign.

       to     This mandatory field defines the quota for  resource  attributes
              for this rule. The quota is expressed by one or more limit defi-
              nitions separated by commas. The configuration allows  two  kind
              of limits definitions

              static limits
                     Static  limits  sets static values as quotas. Each limits
                     consists of a complex attribute followed by an  "="  sign
                     and  the  value  specification compliant with the complex
                     attribute type (see _c_o_m_p_l_e_x(5)).

              dynamic limits
                     A dynamic limit is a simple algebraic expression used  to
                     derive  the  limit  value. To be dynamic, the formula can
                     reference a complex attribute whose value is used for the
                     calculation  of the resulting limit.  The formula expres-
                     sion syntax is that of a sum of weighted complex  values,
                     that is:

                     {w1|$complex1[*w1]}[{+|-}{w2|$complex2[*w2]}[{+|-}...]]

                     The  weighting factors (w1, ...) are positive integers or
                     floating point numbers in double precision.  The  complex
                     values (complex1, ...)  are specified by the name defined
                     as type INT or DOUBLE  in  the  complex  list  (see  _c_o_m_-
                     _p_l_e_x(5)).
                     NNoottee::  Dynamic limits can only configured for a host-spe-
                     cific rule.

       Please note that resource quotas are not enforced as job resource  lim-
       its.   Limiting  for  example  h_vmem  in a resource quota set does not
       result in a memory limit being set for job execution.

EEXXAAMMPPLLEESS
       The following is  the  simplest  form  of  a  resource  quota  set.  It
       restricts  all  users  together  to the maximal use of 100 slots in the
       whole cluster.

       =======================================================================
       {
          name         max_u_slots
          description  "All users max use of 100 slots"
          enabled      true
          limit        to slots=100
       }
       =======================================================================


       The next example restricts user1 and user2 to 6g virtual_free  and  all
       other  users  to  the  maximal  use of 4g virtual_free on every host in
       hostgroup lx_hosts.

       =======================================================================
       {
          name         max_virtual_free_on_lx_hosts
          description  "resource quota for virtual_free restriction"
          enabled      true
          limit        users {user1,user2} hosts {@lx_host} to virtual_free=6g
          limit        users {*} hosts {@lx_host} to virtual_free=4g
       }
       =======================================================================


       The next example shows the use of a dynamic  limit.  It  restricts  all
       users together to a maximum use of the double size of num_proc.

       =======================================================================
       {
          name         max_slots_on_every_host
          enabled      true
          limit        hosts {*} to slots=$num_proc*2
       }
       =======================================================================


SSEEEE AALLSSOO
       _s_g_e___i_n_t_r_o(1),   _a_c_c_e_s_s___l_i_s_t(5),   _c_o_m_p_l_e_x(5),   _h_o_s_t(5),  _h_o_s_t_g_r_o_u_p(5),
       _q_c_o_n_f(1), _q_q_u_o_t_a(1), _p_r_o_j_e_c_t(5).

CCOOPPYYRRIIGGHHTT
       See _s_g_e___i_n_t_r_o(1) for a full statement of rights and permissions.



SGE 8.0.0                $Date: 2008-12-22 11:13:35 $    SGE_RESOURCE_QUOTA(5)
