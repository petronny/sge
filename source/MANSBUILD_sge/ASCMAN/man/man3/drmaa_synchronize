drmaa_wait(3)                  Grid Engine DRMAA                 drmaa_wait(3)



NNAAMMEE
       drmaa_synchronize,   drmaa_wait,   drmaa_wifexited,  drmaa_wexitstatus,
       drmaa_wifsignaled, drmaa_wtermsig, drmaa_wcoredump, drmaa_wifaborted  -
       Waiting for jobs to finish

SSYYNNOOPPSSIISS
       ##iinncclluuddee ""ddrrmmaaaa..hh""

       iinntt ddrrmmaaaa__ssyynncchhrroonniizzee((
              ccoonnsstt cchhaarr **jjoobb__iiddss[[]],,
              ssiiggnneedd lloonngg ttiimmeeoouutt,,
              iinntt ddiissppoossee,,
              cchhaarr **eerrrroorr__ddiiaaggnnoossiiss,,
              ssiizzee__tt eerrrroorr__ddiiaagg__lleenn
       ));;

       iinntt ddrrmmaaaa__wwaaiitt((
              ccoonnsstt cchhaarr **jjoobb__iidd,,
              cchhaarr **jjoobb__iidd__oouutt,,
              ssiizzee__tt jjoobb__iidd__oouutt__lleenn,,
              iinntt **ssttaatt,,
              ssiiggnneedd lloonngg ttiimmeeoouutt,,
              ddrrmmaaaa__aattttrr__vvaalluueess__tt ****rruussaaggee,,
              cchhaarr **eerrrroorr__ddiiaaggnnoossiiss,,
              ssiizzee__tt eerrrroorr__ddiiaaggnnooiiss__lleenn
       ));;

       iinntt ddrrmmaaaa__wwiiffaabboorrtteedd((
              iinntt **aabboorrtteedd,,
              iinntt ssttaatt,,
              cchhaarr **eerrrroorr__ddiiaaggnnoossiiss,,
              ssiizzee__tt eerrrroorr__ddiiaagg__lleenn
       ));;

       iinntt ddrrmmaaaa__wwiiffeexxiitteedd((
              iinntt **eexxiitteedd,,
              iinntt ssttaatt,,
              cchhaarr **eerrrroorr__ddiiaaggnnoossiiss,,
              ssiizzee__tt eerrrroorr__ddiiaagg__lleenn
       ));;

       iinntt ddrrmmaaaa__wwiiffssiiggnnaalleedd((
              iinntt **ssiiggnnaalleedd,,
              iinntt ssttaatt,,
              cchhaarr **eerrrroorr__ddiiaaggnnoossiiss,,
              ssiizzee__tt eerrrroorr__ddiiaagg__lleenn
       ));;

       iinntt ddrrmmaaaa__wwccoorreedduummpp((
              iinntt **ccoorree__dduummppeedd,,
              iinntt ssttaatt,,
              cchhaarr **eerrrroorr__ddiiaaggnnoossiiss,,
              ssiizzee__tt eerrrroorr__ddiiaagg__lleenn
       ));;

       iinntt ddrrmmaaaa__wweexxiittssttaattuuss((
              iinntt **eexxiitt__ssttaattuuss,,
              iinntt ssttaatt,,
              cchhaarr **eerrrroorr__ddiiaaggnnoossiiss,,
              ssiizzee__tt eerrrroorr__ddiiaagg__lleenn
       ));;

       iinntt ddrrmmaaaa__wwtteerrmmssiigg((
              cchhaarr **ssiiggnnaall,,
              ssiizzee__tt ssiiggnnaall__lleenn,,
              iinntt ssttaatt,,
              cchhaarr **eerrrroorr__ddiiaaggnnoossiiss,,
              ssiizzee__tt eerrrroorr__ddiiaagg__lleenn
       ));;

DDEESSCCRRIIPPTTIIOONN
       The  drmaa_synchronize()  function  blocks the calling thread until all
       jobs specified in _j_o_b___i_d_s have failed or finished execution. If _j_o_b___i_d_s
       contains  'DRMAA_JOB_IDS_SESSION_ALL', then this function waits for all
       jobs submitted during this DRMAA session.  The  _j_o_b___i_d_s  pointer  array
       must be _N_U_L_L terminated.

       To  prevent  blocking indefinitely in this call, the caller may use the
       _t_i_m_e_o_u_t, specifying how many seconds to wait for this call to  complete
       before  timing out. The special value DRMAA_TIMEOUT_WAIT_FOREVER can be
       used to wait indefinitely for a result. The special  value  DRMAA_TIME-
       OUT_NO_WAIT  can  be  used  to  return  immediately.  If the call exits
       before _t_i_m_e_o_u_t seconds, all the specified jobs have  completed  or  the
       calling  thread  received an interrupt.  In both cases, the return code
       is DRMAA_ERRNO_EXIT_TIMEOUT.

       The _d_i_s_p_o_s_e parameter specifies how to treat reaping  information.   If
       '0'  is  passed to this parameter, job finish information will still be
       available when _d_r_m_a_a___w_a_i_t(3) is used. If '1' is  passed,  _d_r_m_a_a___w_a_i_t(3)
       will be unable to access this job's finish information.

   ddrrmmaaaa__wwaaiitt(())
       The  drmaa_wait()  function blocks the calling thread until a job fails
       or finishes execution.  This routine is modeled on  the  _w_a_i_t_4(3)  rou-
       tine.   If  the special string 'DRMAA_JOB_IDS_SESSION_ANY' is passed as
       _j_o_b___i_d, this routine will wait for any job from the session.  Otherwise
       the  _j_o_b___i_d  must be the job identifier of a job or array job task that
       was submitted during the session.

       To prevent blocking indefinitely in this call, the caller may use _t_i_m_e_-
       _o_u_t,  specifying  how  many  seconds  to wait for this call to complete
       before timing out. The special value DRMAA_TIMEOUT_WAIT_FOREVER can  be
       to  wait  indefinitely  for  a  result.  The  special value DRMAA_TIME-
       OUT_NO_WAIT can be used to  return  immediately.   If  the  call  exits
       before  _t_i_m_e_o_u_t  seconds  have passed, all the specified jobs have com-
       pleted or the calling thread received an interrupt.  In both cases, the
       return code is DRMAA_ERRNO_EXIT_TIMEOUT.

       The routine reaps jobs on a successful call, so any subsequent calls to
       _d_r_m_a_a___w_a_i_t(3) will  fail  returning  a  DRMAA_ERRNO_INVALID_JOB  error,
       meaning  that  the job has already been reaped.  This error is the same
       as if the job were unknown. Returning due to an elapsed timeout  or  an
       interrupt  does not cause the job information to be reaped.  This means
       that, in this case, it is  possible  to  issue  _d_r_m_a_a___w_a_i_t(3)  multiple
       times for the same _j_o_b___i_d.

       If  _j_o_b___i_d___o_u_t  is not a null pointer, then on return from a successful
       _d_r_m_a_a___w_a_i_t(3) call, up to _j_o_b___i_d___o_u_t___l_e_n characters from the job id  of
       the failed or finished job are returned.

       If  _s_t_a_t  is  not  a  null  pointer,  then  on return from a successful
       _d_r_m_a_a___w_a_i_t(3) call, the status of the job  is  stored  in  the  integer
       pointed  to by _s_t_a_t.  _s_t_a_t indicates whether job failed or finished and
       other information. The information encoded in the integer value can  be
       accessed   via   _d_r_m_a_a___w_i_f_a_b_o_r_t_e_d(3)  _d_r_m_a_a___w_i_f_e_x_i_t_e_d(3)  _d_r_m_a_a___w_i_f_s_i_g_-
       _n_a_l_e_d(3) _d_r_m_a_a___w_c_o_r_e_d_u_m_p(3) _d_r_m_a_a___w_e_x_i_t_s_t_a_t_u_s(3) _d_r_m_a_a___w_t_e_r_m_s_i_g(3).

       If _r_u_s_a_g_e is not a null pointer,  then  on  return  from  a  successful
       _d_r_m_a_a___w_a_i_t(3)  call, a summary of the  resources used by the terminated
       job is returned in form of a DRMAA  values  string  vector. The entries
       in   the   DRMAA   values   string   vector   can  be  extracted  using
       _d_r_m_a_a___g_e_t___n_e_x_t___a_t_t_r___v_a_l_u_e(3).      Each     string     returned      by
       _d_r_m_a_a___g_e_t___n_e_x_t___a_t_t_r___v_a_l_u_e(3)  will  be  of  the  format <name>=<value>,
       where <name> and <value> specify name and amount of resources  consumed
       by  the job, respectively.  See _a_c_c_o_u_n_t_i_n_g(5) for an explanation of the
       resource information.

   ddrrmmaaaa__wwiiffaabboorrtteedd(())
       The drmaa_wifaborted() function evaluates into the integer  pointed  to
       by  _a_b_o_r_t_e_d a non-zero value if _s_t_a_t was returned from a job that ended
       before entering the running state.

   ddrrmmaaaa__wwiiffeexxiitteedd(())
       The drmaa_wifexited() function evaluates into the integer pointed to by
       _e_x_i_t_e_d a non-zero value if _s_t_a_t was returned from a job that terminated
       normally. A zero value can also indicate that although the job has ter-
       minated  normally,  an  exit status is not available, or that it is not
       known whether the job terminated normally.  In both cases  _d_r_m_a_a___w_e_x_i_t_-
       _s_t_a_t_u_s(3)  will  not  provide exit status information. A non-zero value
       returned in _e_x_i_t_e_d indicates more detailed diagnosis can be provided by
       means   of  _d_r_m_a_a___w_i_f_s_i_g_n_a_l_e_d(3),  _d_r_m_a_a___w_t_e_r_m_s_i_g(3)  and  _d_r_m_a_a___w_c_o_r_e_-
       _d_u_m_p(3).

   ddrrmmaaaa__wwiiffssiiggnnaalleedd(())
       The drmaa_wifsignaled() function evaluates into the integer pointed  to
       by _s_i_g_n_a_l_e_d a non-zero value if _s_t_a_t was returned for a job that termi-
       nated due to the receipt of a signal. A zero value  can  also  indicate
       that  although  the  job has terminated due to the receipt of a signal,
       the signal is not available, or it is not known whether the job  termi-
       nated  due  to the receipt of a signal. In both cases _d_r_m_a_a___w_t_e_r_m_s_i_g(3)
       will not provide signal information. A non-zero value returned in  _s_i_g_-
       _n_a_l_e_d  indicates  signal  information  can  be  retrieved  by  means of
       _d_r_m_a_a___w_t_e_r_m_s_i_g(3).

   ddrrmmaaaa__wwccoorreedduummpp(())
       If _d_r_m_a_a___w_i_f_s_i_g_n_a_l_e_d(3) returned  a  non-zero  value  in  the  _s_i_g_n_a_l_e_d
       parameter,  the  drmaa_wcoredump()  function evaluates into the integer
       pointed to by _c_o_r_e___d_u_m_p_e_d a non-zero value if a core image of the  ter-
       minated job was created.

   ddrrmmaaaa__wweexxiittssttaattuuss(())
       If  _d_r_m_a_a___w_i_f_e_x_i_t_e_d(3)  returned a non-zero value in the _e_x_i_t_e_d parame-
       ter,  the  drmaa_wexitstatus()  function  evaluates  into  the  integer
       pointed to by _e_x_i_t___c_o_d_e the exit code that the job passed to _e_x_i_t(2) or
       the value that the child process returned from main.

   ddrrmmaaaa__wwtteerrmmssiigg(())
       If _d_r_m_a_a___w_i_f_s_i_g_n_a_l_e_d(3) returned  a  non-zero  value  in  the  _s_i_g_n_a_l_e_d
       parameter,  the  drmaa_wtermsig()  function evaluates into _s_i_g_n_a_l up to
       _s_i_g_n_a_l___l_e_n characters of a string representation  of  the  signal  that
       caused the termination of the job. For signals declared by POSIX.1, the
       symbolic names are returned (e.g., SIGABRT, SIGALRM). For  signals  not
       declared by POSIX, any other string may be returned.

EENNVVIIRROONNMMEENNTTAALL VVAARRIIAABBLLEESS
       SSGGEE__RROOOOTT       Specifies  the location of the Grid Engine standard con-
                      figuration files.

       SSGGEE__CCEELLLL       If set, specifies the default Grid  Engine  cell  to  be
                      used. To address a Grid Engine cell Grid Engine uses (in
                      the order of precedence):

                             The name of the cell specified in the environment
                             variable SGE_CELL, if it is set.

                             The name of the default cell, i.e. ddeeffaauulltt.


       SSGGEE__DDEEBBUUGG__LLEEVVEELL
                      If set, specifies that debug information should be writ-
                      ten to stderr. In addition the level of detail in  which
                      debug information is generated is defined.

       SSGGEE__QQMMAASSTTEERR__PPOORRTT
                      If  set,  specifies the tcp port on which _s_g_e___q_m_a_s_t_e_r(8)
                      is expected to listen for communication requests.   Most
                      installations  will  use a services map entry instead to
                      define that port.

RREETTUURRNN VVAALLUUEESS
       Upon successful completion, drmaa_run_job(), drmaa_run_bulk_jobs(), and
       drmaa_get_next_job_id()  return DRMAA_ERRNO_SUCCESS. Other values indi-
       cate an error.  Up to _e_r_r_o_r___d_i_a_g___l_e_n characters of error related  diag-
       nosis information is then provided in the buffer _e_r_r_o_r___d_i_a_g_n_o_s_i_s.

EERRRROORRSS
       The  drmaa_synchronize(), drmaa_wait(), drmaa_wifexited(), drmaa_wexit-
       status(), drmaa_wifsignaled(), drmaa_wtermsig(), drmaa_wcoredump(), and
       drmaa_wifaborted() will fail if:

   DDRRMMAAAA__EERRRRNNOO__IINNTTEERRNNAALL__EERRRROORR
       Unexpected or internal DRMAA error, like system call failure, etc.

   DDRRMMAAAA__EERRRRNNOO__DDRRMM__CCOOMMMMUUNNIICCAATTIIOONN__FFAAIILLUURREE
       Could not contact DRM system for this request.

   DDRRMMAAAA__EERRRRNNOO__AAUUTTHH__FFAAIILLUURREE
       The  specified  request is not processed successfully due to authoriza-
       tion failure.

   DDRRMMAAAA__EERRRRNNOO__IINNVVAALLIIDD__AARRGGUUMMEENNTT
       The input value for an argument is invalid.

   DDRRMMAAAA__EERRRRNNOO__NNOO__AACCTTIIVVEE__SSEESSSSIIOONN
       Failed because there is no active session.

   DDRRMMAAAA__EERRRRNNOO__NNOO__MMEEMMOORRYY
       Failed allocating memory.

       The drmaa_synchronize() and drmaa_wait() functions will fail if:

   DDRRMMAAAA__EERRRRNNOO__EEXXIITT__TTIIMMEEOOUUTT
       Time-out condition.

   DDRRMMAAAA__EERRRRNNOO__IINNVVAALLIIDD__JJOOBB
       The job specified by the does not exist.

       The drmaa_wait() will fail if:

   DDRRMMAAAA__EERRRRNNOO__NNOO__RRUUSSAAGGEE
       This error code is returned by drmaa_wait() when a job has finished but
       no rusage and stat data could be provided.

SSEEEE AALLSSOO
       _d_r_m_a_a___s_u_b_m_i_t(3).




SGE 8.0.0                $Date: 2004-11-12 15:40:05 $            drmaa_wait(3)
