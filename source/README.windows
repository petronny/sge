Building on MS Windows with SUA/SFU
-----------------------------------

These are notes on building pre-sge-8.1.3 on 64-bit MS "Windows 7
Enterprise" in the "normal" way with the "SUA" system.  (It is also
possible to build with Cygwin, but the server components currently
seem to have problems and building the native Windows components isn't
set up.)  The procedure will be different for installing the basic
environment with the earlier "SFU" system in MS Windows XP.  aimk may
well need hacking for other versions, as well as aimk.site.

The initial SUA installation is via:

Control panel -> Programs and Features -> Turn Windows features on and
off -> Subsystem for UNIX-based applications

There is a parallel item to enable the NFS client, which you may want
on execution hosts.

Then go to "Download utilities ..." from the SUA item in the All
Programs menu and install it.  You need the GNU utilities and
SDK components.  To build CSP support, you need openssl.  There isn't
currently an official distribution for Interix, so either build it
yourself, or use the somewhat old version from
<http://arc.liv.ac.uk/downloads/SGE/support/>.  aimk.site expects it
to be unpacked into /usr/local/ssl.

You also need the native compiler from Microsoft Visual C++.  You can
use the gratis "Express Edition", which appears to be available from
<https://www.microsoft.com/visualstudio/eng/products/visual-studio-express-products>.
The tested procedure here was with "Visual Studio 9.0" "2008 Express
Edition" from our "corporate" installation.  There's a crucial,
obscure step necessary to be able to run the compiler.  Without it,
cl.exe won't run (or the Interix /bin/ar), and you won't see why not
(a missing dll) unless you run the binary explicitly -- not via the
path.  Assuming the default location for the VC installation of that
version, then the PATH environment variable must have the _two_
components:

  PATH="/dev/fs/C/Program Files (x86)/Microsoft Visual Studio 9.0/VC/bin:/dev/fs/C/Program Files (x86)/Microsoft Visual Studio 9.0/Common7/IDE:$PATH"

The latter is where mspdb80.dll (in this version) resides.  These are
set by default in aimk.site.  On a 32-bit system, remove " (x86)" from
the paths.

It's similarly non-obvious that /bin/ar won't work (at least in this
64-bit version for 32-bit objects) without that path or by supplying
option "-m x86".

The 32-bit OpenSSL library should be in /usr/local/ssl/lib/x86.  It is
set up to link statically in the aimk files.  The hwloc library isn't
currently available on Interix, so core binding and topology
information isn't available.

It isn't currently clear whether a 64-bit Interix version can be built.
